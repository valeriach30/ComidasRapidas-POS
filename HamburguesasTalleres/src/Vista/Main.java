/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Control.Controlador;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vchin
 */
public class Main extends javax.swing.JFrame {

    Controlador contol ;
    Integer totalP = 0;
    public Main() {
        initComponents();
        this.contol = new Controlador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        huevobtn = new javax.swing.JButton();
        Sencillabtn = new javax.swing.JButton();
        dobleQuesobtn = new javax.swing.JButton();
        DobleTortabtn = new javax.swing.JButton();
        TripleTortabtn = new javax.swing.JButton();
        choriBurgerbtn = new javax.swing.JButton();
        pollobtn = new javax.swing.JButton();
        carneResbtn = new javax.swing.JButton();
        carneCerdobtn = new javax.swing.JButton();
        pescadobtn = new javax.swing.JButton();
        patatasbtn = new javax.swing.JButton();
        papasbtn = new javax.swing.JButton();
        arosbtn = new javax.swing.JButton();
        palillosbtn = new javax.swing.JButton();
        salchipapasbtn = new javax.swing.JButton();
        papanachosbtn = new javax.swing.JButton();
        papasbacon = new javax.swing.JButton();
        tacoHarinabtn = new javax.swing.JButton();
        tacoMaizbtn = new javax.swing.JButton();
        tacoPapasbtn = new javax.swing.JButton();
        choripanbtn = new javax.swing.JButton();
        machobtn = new javax.swing.JButton();
        machabtn = new javax.swing.JButton();
        hotdogbtn = new javax.swing.JButton();
        superhotdogbtn = new javax.swing.JButton();
        jamonbtn = new javax.swing.JButton();
        salchiBurgerbtn = new javax.swing.JButton();
        fajitasbtn = new javax.swing.JButton();
        machaTortabtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedido = new javax.swing.JTable();
        cantidad = new javax.swing.JSpinner();
        tipoBebida = new javax.swing.JComboBox<>();
        imprimirbtn = new javax.swing.JButton();
        btn355 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn500 = new javax.swing.JButton();
        btn600 = new javax.swing.JButton();
        eliminarUltimobtn = new javax.swing.JButton();
        eliminarTodosbtn = new javax.swing.JButton();
        combo1btn = new javax.swing.JButton();
        finalizarbtn = new javax.swing.JButton();
        efectivobtn = new javax.swing.JButton();
        totalApagar = new javax.swing.JLabel();
        tarjetabtn = new javax.swing.JButton();
        sinpebtn = new javax.swing.JButton();
        chiclesbtn = new javax.swing.JButton();
        postrebtn = new javax.swing.JButton();
        cajetabtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1148, 630));
        jPanel1.setMinimumSize(new java.awt.Dimension(1148, 630));
        jPanel1.setPreferredSize(new java.awt.Dimension(1148, 630));
        jPanel1.setLayout(null);

        huevobtn.setBackground(new java.awt.Color(51, 153, 255));
        huevobtn.setForeground(new java.awt.Color(0, 0, 0));
        huevobtn.setText("CON HUEVO");
        huevobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        huevobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        huevobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        huevobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huevobtnActionPerformed(evt);
            }
        });
        jPanel1.add(huevobtn);
        huevobtn.setBounds(540, 10, 125, 60);

        Sencillabtn.setBackground(new java.awt.Color(51, 153, 255));
        Sencillabtn.setForeground(new java.awt.Color(0, 0, 0));
        Sencillabtn.setText("SENCILLA");
        Sencillabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        Sencillabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        Sencillabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        Sencillabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SencillabtnActionPerformed(evt);
            }
        });
        jPanel1.add(Sencillabtn);
        Sencillabtn.setBounds(20, 10, 125, 60);

        dobleQuesobtn.setBackground(new java.awt.Color(51, 153, 255));
        dobleQuesobtn.setForeground(new java.awt.Color(0, 0, 0));
        dobleQuesobtn.setText("DOBLE QUESO"); // NOI18N
        dobleQuesobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        dobleQuesobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        dobleQuesobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        dobleQuesobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobleQuesobtnActionPerformed(evt);
            }
        });
        jPanel1.add(dobleQuesobtn);
        dobleQuesobtn.setBounds(410, 10, 125, 60);

        DobleTortabtn.setBackground(new java.awt.Color(51, 153, 255));
        DobleTortabtn.setForeground(new java.awt.Color(0, 0, 0));
        DobleTortabtn.setText("DOBLE TORTA");
        DobleTortabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        DobleTortabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        DobleTortabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        DobleTortabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DobleTortabtnActionPerformed(evt);
            }
        });
        jPanel1.add(DobleTortabtn);
        DobleTortabtn.setBounds(150, 10, 125, 60);

        TripleTortabtn.setBackground(new java.awt.Color(51, 153, 255));
        TripleTortabtn.setForeground(new java.awt.Color(0, 0, 0));
        TripleTortabtn.setText("TRIPLE TORTA");
        TripleTortabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        TripleTortabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        TripleTortabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        TripleTortabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TripleTortabtnActionPerformed(evt);
            }
        });
        jPanel1.add(TripleTortabtn);
        TripleTortabtn.setBounds(280, 10, 125, 60);

        choriBurgerbtn.setBackground(new java.awt.Color(51, 153, 255));
        choriBurgerbtn.setForeground(new java.awt.Color(0, 0, 0));
        choriBurgerbtn.setText("CHORI BURGER");
        choriBurgerbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        choriBurgerbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        choriBurgerbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        choriBurgerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choriBurgerbtnActionPerformed(evt);
            }
        });
        jPanel1.add(choriBurgerbtn);
        choriBurgerbtn.setBounds(280, 80, 125, 60);

        pollobtn.setBackground(new java.awt.Color(255, 184, 14));
        pollobtn.setForeground(new java.awt.Color(0, 0, 0));
        pollobtn.setText("POLLO");
        pollobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        pollobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        pollobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        pollobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollobtnActionPerformed(evt);
            }
        });
        jPanel1.add(pollobtn);
        pollobtn.setBounds(410, 80, 125, 60);

        carneResbtn.setBackground(new java.awt.Color(255, 184, 14));
        carneResbtn.setForeground(new java.awt.Color(0, 0, 0));
        carneResbtn.setText("CARNES RES"); // NOI18N
        carneResbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        carneResbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        carneResbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        carneResbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carneResbtnActionPerformed(evt);
            }
        });
        jPanel1.add(carneResbtn);
        carneResbtn.setBounds(540, 80, 125, 60);

        carneCerdobtn.setBackground(new java.awt.Color(255, 184, 14));
        carneCerdobtn.setForeground(new java.awt.Color(0, 0, 0));
        carneCerdobtn.setText("CARNE CERDO");
        carneCerdobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        carneCerdobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        carneCerdobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        carneCerdobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carneCerdobtnActionPerformed(evt);
            }
        });
        jPanel1.add(carneCerdobtn);
        carneCerdobtn.setBounds(20, 150, 125, 60);

        pescadobtn.setBackground(new java.awt.Color(255, 184, 14));
        pescadobtn.setForeground(new java.awt.Color(0, 0, 0));
        pescadobtn.setText("PESCADO");
        pescadobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        pescadobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        pescadobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        pescadobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pescadobtnActionPerformed(evt);
            }
        });
        jPanel1.add(pescadobtn);
        pescadobtn.setBounds(150, 150, 125, 60);

        patatasbtn.setBackground(new java.awt.Color(100, 147, 19));
        patatasbtn.setForeground(new java.awt.Color(0, 0, 0));
        patatasbtn.setText("PATATAS");
        patatasbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        patatasbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        patatasbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        patatasbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patatasbtnActionPerformed(evt);
            }
        });
        jPanel1.add(patatasbtn);
        patatasbtn.setBounds(280, 150, 125, 60);

        papasbtn.setBackground(new java.awt.Color(100, 147, 19));
        papasbtn.setForeground(new java.awt.Color(0, 0, 0));
        papasbtn.setText("PAPAS");
        papasbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        papasbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        papasbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        papasbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                papasbtnActionPerformed(evt);
            }
        });
        jPanel1.add(papasbtn);
        papasbtn.setBounds(410, 150, 125, 60);

        arosbtn.setBackground(new java.awt.Color(100, 147, 19));
        arosbtn.setForeground(new java.awt.Color(0, 0, 0));
        arosbtn.setText("AROS"); // NOI18N
        arosbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        arosbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        arosbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        arosbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arosbtnActionPerformed(evt);
            }
        });
        jPanel1.add(arosbtn);
        arosbtn.setBounds(540, 150, 125, 60);

        palillosbtn.setBackground(new java.awt.Color(100, 147, 19));
        palillosbtn.setForeground(new java.awt.Color(0, 0, 0));
        palillosbtn.setText("PALILLOS");
        palillosbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        palillosbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        palillosbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        palillosbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palillosbtnActionPerformed(evt);
            }
        });
        jPanel1.add(palillosbtn);
        palillosbtn.setBounds(20, 220, 125, 60);

        salchipapasbtn.setBackground(new java.awt.Color(100, 147, 19));
        salchipapasbtn.setForeground(new java.awt.Color(0, 0, 0));
        salchipapasbtn.setText("SALCHIPAPAS");
        salchipapasbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        salchipapasbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        salchipapasbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        salchipapasbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salchipapasbtnActionPerformed(evt);
            }
        });
        jPanel1.add(salchipapasbtn);
        salchipapasbtn.setBounds(150, 220, 125, 60);

        papanachosbtn.setBackground(new java.awt.Color(100, 147, 19));
        papanachosbtn.setForeground(new java.awt.Color(0, 0, 0));
        papanachosbtn.setText("PAPA NACHOS");
        papanachosbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        papanachosbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        papanachosbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        papanachosbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                papanachosbtnActionPerformed(evt);
            }
        });
        jPanel1.add(papanachosbtn);
        papanachosbtn.setBounds(280, 220, 125, 60);

        papasbacon.setBackground(new java.awt.Color(100, 147, 19));
        papasbacon.setForeground(new java.awt.Color(0, 0, 0));
        papasbacon.setText("PAPAS BACON");
        papasbacon.setMaximumSize(new java.awt.Dimension(100, 100));
        papasbacon.setMinimumSize(new java.awt.Dimension(100, 100));
        papasbacon.setPreferredSize(new java.awt.Dimension(100, 100));
        papasbacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                papasbaconActionPerformed(evt);
            }
        });
        jPanel1.add(papasbacon);
        papasbacon.setBounds(410, 220, 125, 60);

        tacoHarinabtn.setBackground(new java.awt.Color(255, 97, 29));
        tacoHarinabtn.setForeground(new java.awt.Color(0, 0, 0));
        tacoHarinabtn.setText("TACO HARINA");
        tacoHarinabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        tacoHarinabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        tacoHarinabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        tacoHarinabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tacoHarinabtnActionPerformed(evt);
            }
        });
        jPanel1.add(tacoHarinabtn);
        tacoHarinabtn.setBounds(20, 290, 125, 60);

        tacoMaizbtn.setBackground(new java.awt.Color(255, 97, 29));
        tacoMaizbtn.setForeground(new java.awt.Color(0, 0, 0));
        tacoMaizbtn.setText("TACO MAIZ"); // NOI18N
        tacoMaizbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        tacoMaizbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        tacoMaizbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        tacoMaizbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tacoMaizbtnActionPerformed(evt);
            }
        });
        jPanel1.add(tacoMaizbtn);
        tacoMaizbtn.setBounds(540, 220, 125, 60);

        tacoPapasbtn.setBackground(new java.awt.Color(255, 97, 29));
        tacoPapasbtn.setForeground(new java.awt.Color(0, 0, 0));
        tacoPapasbtn.setText("TACOCONPAPAS");
        tacoPapasbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        tacoPapasbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        tacoPapasbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        tacoPapasbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tacoPapasbtnActionPerformed(evt);
            }
        });
        jPanel1.add(tacoPapasbtn);
        tacoPapasbtn.setBounds(150, 290, 125, 60);

        choripanbtn.setBackground(new java.awt.Color(255, 97, 29));
        choripanbtn.setForeground(new java.awt.Color(0, 0, 0));
        choripanbtn.setText("CHORIPAN");
        choripanbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        choripanbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        choripanbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        choripanbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choripanbtnActionPerformed(evt);
            }
        });
        jPanel1.add(choripanbtn);
        choripanbtn.setBounds(280, 290, 125, 60);

        machobtn.setBackground(new java.awt.Color(255, 97, 29));
        machobtn.setForeground(new java.awt.Color(0, 0, 0));
        machobtn.setText("MACHO");
        machobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        machobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        machobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        machobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machobtnActionPerformed(evt);
            }
        });
        jPanel1.add(machobtn);
        machobtn.setBounds(410, 290, 125, 60);

        machabtn.setBackground(new java.awt.Color(255, 97, 29));
        machabtn.setForeground(new java.awt.Color(0, 0, 0));
        machabtn.setText("MACHA"); // NOI18N
        machabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        machabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        machabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        machabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machabtnActionPerformed(evt);
            }
        });
        jPanel1.add(machabtn);
        machabtn.setBounds(540, 290, 125, 60);

        hotdogbtn.setBackground(new java.awt.Color(255, 97, 29));
        hotdogbtn.setForeground(new java.awt.Color(0, 0, 0));
        hotdogbtn.setText("HOTDOG");
        hotdogbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        hotdogbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        hotdogbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        hotdogbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotdogbtnActionPerformed(evt);
            }
        });
        jPanel1.add(hotdogbtn);
        hotdogbtn.setBounds(20, 360, 125, 60);

        superhotdogbtn.setBackground(new java.awt.Color(255, 97, 29));
        superhotdogbtn.setForeground(new java.awt.Color(0, 0, 0));
        superhotdogbtn.setText("SUPERHOTDOG");
        superhotdogbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        superhotdogbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        superhotdogbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        superhotdogbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superhotdogbtnActionPerformed(evt);
            }
        });
        jPanel1.add(superhotdogbtn);
        superhotdogbtn.setBounds(150, 360, 125, 60);

        jamonbtn.setBackground(new java.awt.Color(51, 153, 255));
        jamonbtn.setForeground(new java.awt.Color(0, 0, 0));
        jamonbtn.setText("CON JAMON");
        jamonbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        jamonbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        jamonbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        jamonbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jamonbtnActionPerformed(evt);
            }
        });
        jPanel1.add(jamonbtn);
        jamonbtn.setBounds(20, 80, 125, 60);

        salchiBurgerbtn.setBackground(new java.awt.Color(51, 153, 255));
        salchiBurgerbtn.setForeground(new java.awt.Color(0, 0, 0));
        salchiBurgerbtn.setText("SALCHI BURGER");
        salchiBurgerbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        salchiBurgerbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        salchiBurgerbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        salchiBurgerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salchiBurgerbtnActionPerformed(evt);
            }
        });
        jPanel1.add(salchiBurgerbtn);
        salchiBurgerbtn.setBounds(150, 80, 125, 60);

        fajitasbtn.setBackground(new java.awt.Color(255, 97, 29));
        fajitasbtn.setForeground(new java.awt.Color(0, 0, 0));
        fajitasbtn.setText("FAJITAS");
        fajitasbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        fajitasbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        fajitasbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        fajitasbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fajitasbtnActionPerformed(evt);
            }
        });
        jPanel1.add(fajitasbtn);
        fajitasbtn.setBounds(280, 360, 125, 60);

        machaTortabtn.setBackground(new java.awt.Color(255, 97, 29));
        machaTortabtn.setForeground(new java.awt.Color(0, 0, 0));
        machaTortabtn.setText("MACHA TORTA");
        machaTortabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        machaTortabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        machaTortabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        machaTortabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machaTortabtnActionPerformed(evt);
            }
        });
        jPanel1.add(machaTortabtn);
        machaTortabtn.setBounds(410, 360, 125, 60);

        tablaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cantidad", "Producto", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPedido);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(680, 20, 452, 402);

        cantidad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cantidad.setValue(1);
        jPanel1.add(cantidad);
        cantidad.setBounds(540, 450, 64, 30);

        tipoBebida.setBackground(new java.awt.Color(255, 255, 255));
        tipoBebida.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tipoBebida.setForeground(new java.awt.Color(0, 0, 0));
        tipoBebida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agua", "Zarza", "Piña", "Kolita", "Toronja", "7 up", "Pepsi", "Frutas", "Te Melocotón", "Te limón", "Te blanco", "Ginger Ale", "Coca Cola", "Jet", "Gatorade azul", "Gatorade rojo" }));
        tipoBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoBebidaActionPerformed(evt);
            }
        });
        jPanel1.add(tipoBebida);
        tipoBebida.setBounds(20, 520, 130, 31);

        imprimirbtn.setBackground(new java.awt.Color(235, 212, 137));
        imprimirbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        imprimirbtn.setForeground(new java.awt.Color(0, 0, 0));
        imprimirbtn.setText("Imprimir"); // NOI18N
        imprimirbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        imprimirbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        imprimirbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.add(imprimirbtn);
        imprimirbtn.setBounds(1010, 440, 125, 60);

        btn355.setBackground(new java.awt.Color(227, 41, 41));
        btn355.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn355.setForeground(new java.awt.Color(0, 0, 0));
        btn355.setText("355 ML"); // NOI18N
        btn355.setMaximumSize(new java.awt.Dimension(100, 100));
        btn355.setMinimumSize(new java.awt.Dimension(100, 100));
        btn355.setPreferredSize(new java.awt.Dimension(100, 100));
        btn355.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn355ActionPerformed(evt);
            }
        });
        jPanel1.add(btn355);
        btn355.setBounds(20, 560, 125, 60);

        btn2.setBackground(new java.awt.Color(227, 41, 41));
        btn2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn2.setForeground(new java.awt.Color(0, 0, 0));
        btn2.setText("2 L"); // NOI18N
        btn2.setMaximumSize(new java.awt.Dimension(100, 100));
        btn2.setMinimumSize(new java.awt.Dimension(100, 100));
        btn2.setPreferredSize(new java.awt.Dimension(100, 100));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        jPanel1.add(btn2);
        btn2.setBounds(410, 560, 125, 60);

        btn500.setBackground(new java.awt.Color(227, 41, 41));
        btn500.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn500.setForeground(new java.awt.Color(0, 0, 0));
        btn500.setText("500 ML"); // NOI18N
        btn500.setMaximumSize(new java.awt.Dimension(100, 100));
        btn500.setMinimumSize(new java.awt.Dimension(100, 100));
        btn500.setPreferredSize(new java.awt.Dimension(100, 100));
        btn500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn500ActionPerformed(evt);
            }
        });
        jPanel1.add(btn500);
        btn500.setBounds(150, 560, 125, 60);

        btn600.setBackground(new java.awt.Color(227, 41, 41));
        btn600.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn600.setForeground(new java.awt.Color(0, 0, 0));
        btn600.setText("600 ML"); // NOI18N
        btn600.setMaximumSize(new java.awt.Dimension(100, 100));
        btn600.setMinimumSize(new java.awt.Dimension(100, 100));
        btn600.setPreferredSize(new java.awt.Dimension(100, 100));
        btn600.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn600ActionPerformed(evt);
            }
        });
        jPanel1.add(btn600);
        btn600.setBounds(280, 560, 125, 60);

        eliminarUltimobtn.setBackground(new java.awt.Color(235, 212, 137));
        eliminarUltimobtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eliminarUltimobtn.setForeground(new java.awt.Color(0, 0, 0));
        eliminarUltimobtn.setText("Eliminar Ultimo"); // NOI18N
        eliminarUltimobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        eliminarUltimobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        eliminarUltimobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        eliminarUltimobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarUltimobtnActionPerformed(evt);
            }
        });
        jPanel1.add(eliminarUltimobtn);
        eliminarUltimobtn.setBounds(680, 440, 125, 60);

        eliminarTodosbtn.setBackground(new java.awt.Color(235, 212, 137));
        eliminarTodosbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eliminarTodosbtn.setForeground(new java.awt.Color(0, 0, 0));
        eliminarTodosbtn.setText("Eliminar Todos"); // NOI18N
        eliminarTodosbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        eliminarTodosbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        eliminarTodosbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        eliminarTodosbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarTodosbtnActionPerformed(evt);
            }
        });
        jPanel1.add(eliminarTodosbtn);
        eliminarTodosbtn.setBounds(840, 440, 125, 60);

        combo1btn.setBackground(new java.awt.Color(0, 153, 153));
        combo1btn.setForeground(new java.awt.Color(0, 0, 0));
        combo1btn.setText("COMBO 1"); // NOI18N
        combo1btn.setMaximumSize(new java.awt.Dimension(100, 100));
        combo1btn.setMinimumSize(new java.awt.Dimension(100, 100));
        combo1btn.setPreferredSize(new java.awt.Dimension(100, 100));
        combo1btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1btnActionPerformed(evt);
            }
        });
        jPanel1.add(combo1btn);
        combo1btn.setBounds(540, 360, 125, 60);

        finalizarbtn.setBackground(new java.awt.Color(100, 136, 19));
        finalizarbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        finalizarbtn.setForeground(new java.awt.Color(0, 0, 0));
        finalizarbtn.setText("FINALIZAR PEDIDO"); // NOI18N
        finalizarbtn.setMaximumSize(new java.awt.Dimension(100, 100));
        finalizarbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        finalizarbtn.setPreferredSize(new java.awt.Dimension(100, 100));
        finalizarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarbtnActionPerformed(evt);
            }
        });
        jPanel1.add(finalizarbtn);
        finalizarbtn.setBounds(680, 580, 460, 40);

        efectivobtn.setBackground(new java.awt.Color(235, 212, 137));
        efectivobtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        efectivobtn.setForeground(new java.awt.Color(0, 0, 0));
        efectivobtn.setText("Efectivo"); // NOI18N
        efectivobtn.setMaximumSize(new java.awt.Dimension(100, 100));
        efectivobtn.setMinimumSize(new java.awt.Dimension(100, 100));
        efectivobtn.setPreferredSize(new java.awt.Dimension(100, 100));
        efectivobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efectivobtnActionPerformed(evt);
            }
        });
        jPanel1.add(efectivobtn);
        efectivobtn.setBounds(680, 510, 125, 60);

        totalApagar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        totalApagar.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(totalApagar);
        totalApagar.setBounds(540, 500, 100, 30);

        tarjetabtn.setBackground(new java.awt.Color(235, 212, 137));
        tarjetabtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tarjetabtn.setForeground(new java.awt.Color(0, 0, 0));
        tarjetabtn.setText("Tarjeta"); // NOI18N
        tarjetabtn.setMaximumSize(new java.awt.Dimension(100, 100));
        tarjetabtn.setMinimumSize(new java.awt.Dimension(100, 100));
        tarjetabtn.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.add(tarjetabtn);
        tarjetabtn.setBounds(1010, 510, 125, 60);

        sinpebtn.setBackground(new java.awt.Color(235, 212, 137));
        sinpebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sinpebtn.setForeground(new java.awt.Color(0, 0, 0));
        sinpebtn.setText("SINPE"); // NOI18N
        sinpebtn.setMaximumSize(new java.awt.Dimension(100, 100));
        sinpebtn.setMinimumSize(new java.awt.Dimension(100, 100));
        sinpebtn.setPreferredSize(new java.awt.Dimension(100, 100));
        sinpebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinpebtnActionPerformed(evt);
            }
        });
        jPanel1.add(sinpebtn);
        sinpebtn.setBounds(840, 510, 125, 60);

        chiclesbtn.setBackground(new java.awt.Color(153, 102, 255));
        chiclesbtn.setForeground(new java.awt.Color(0, 0, 0));
        chiclesbtn.setLabel("CHICLES");
        chiclesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiclesbtnActionPerformed(evt);
            }
        });
        jPanel1.add(chiclesbtn);
        chiclesbtn.setBounds(280, 430, 125, 60);

        postrebtn.setBackground(new java.awt.Color(153, 102, 255));
        postrebtn.setForeground(new java.awt.Color(0, 0, 0));
        postrebtn.setText("POSTRE");
        postrebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postrebtnActionPerformed(evt);
            }
        });
        jPanel1.add(postrebtn);
        postrebtn.setBounds(20, 430, 125, 60);

        cajetabtn.setBackground(new java.awt.Color(153, 102, 255));
        cajetabtn.setForeground(new java.awt.Color(0, 0, 0));
        cajetabtn.setLabel("CAJETA");
        cajetabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajetabtnActionPerformed(evt);
            }
        });
        jPanel1.add(cajetabtn);
        cajetabtn.setBounds(150, 430, 125, 60);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Cantidad");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(420, 450, 110, 30);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("TOTAL");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(420, 500, 60, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void huevobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huevobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2750);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Con Huevo", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_huevobtnActionPerformed

    private void SencillabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SencillabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Sencilla", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_SencillabtnActionPerformed

    private void dobleQuesobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobleQuesobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2750);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Doble Queso", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_dobleQuesobtnActionPerformed

    private void DobleTortabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DobleTortabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Doble Torta", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_DobleTortabtnActionPerformed

    private void TripleTortabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TripleTortabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 4500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Triple Torta", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_TripleTortabtnActionPerformed

    private void choriBurgerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choriBurgerbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "CHori Burger", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_choriBurgerbtnActionPerformed

    private void pollobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Artesanal Pollo", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_pollobtnActionPerformed

    private void carneResbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carneResbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Artesanal Mechada Res", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_carneResbtnActionPerformed

    private void carneCerdobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carneCerdobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Artesanal Mechada Cerdo", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_carneCerdobtnActionPerformed

    private void pescadobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pescadobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Artesanal Pescado", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_pescadobtnActionPerformed

    private void patatasbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patatasbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Patatas", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_patatasbtnActionPerformed

    private void papasbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_papasbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Papas", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_papasbtnActionPerformed

    private void arosbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arosbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Aros de Cebolla", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_arosbtnActionPerformed

    private void palillosbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palillosbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Palillos de Queso", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_palillosbtnActionPerformed

    private void salchipapasbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salchipapasbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1300);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Salchipapas", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_salchipapasbtnActionPerformed

    private void papanachosbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_papanachosbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Papanachos", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_papanachosbtnActionPerformed

    private void papasbaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_papasbaconActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Papas Bacon", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_papasbaconActionPerformed

    private void tacoHarinabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tacoHarinabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Taco Harina", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_tacoHarinabtnActionPerformed

    private void tacoMaizbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tacoMaizbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Taco Maiz", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_tacoMaizbtnActionPerformed

    private void tacoPapasbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tacoPapasbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Taco con Papas", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_tacoPapasbtnActionPerformed

    private void choripanbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choripanbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Choripan", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_choripanbtnActionPerformed

    private void machobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machobtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Macho", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_machobtnActionPerformed

    private void machabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2500);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Macha", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_machabtnActionPerformed

    private void hotdogbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotdogbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1200);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Hot Dog Sencillo", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_hotdogbtnActionPerformed

    private void superhotdogbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superhotdogbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1700);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Super Hot Dog", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_superhotdogbtnActionPerformed

    private void jamonbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jamonbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2750);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Con Jamon", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_jamonbtnActionPerformed

    private void salchiBurgerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salchiBurgerbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 2750);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Salchi Burger", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_salchiBurgerbtnActionPerformed

    private void fajitasbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fajitasbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3800);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Fajitas", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_fajitasbtnActionPerformed

    private void machaTortabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machaTortabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3250);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Macha con Torta", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_machaTortabtnActionPerformed

    private void eliminarTodosbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarTodosbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarTodosbtnActionPerformed

    private void combo1btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1btnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 3800);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Combo 1", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_combo1btnActionPerformed

    private void btn500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn500ActionPerformed
        boolean bandera = bebidaValida(500,tipoBebida.getSelectedItem().toString());
        if(bandera == false){
            JOptionPane.showMessageDialog(null, "Ese tipo de bebida no tiene ese tamaño", "Error", JOptionPane.OK_OPTION);
        }
        else{
            int cantidadProducto = (Integer) cantidad.getValue();
            int total = (cantidadProducto * 1200);
            DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
            model.addRow(new Object[]{cantidad.getValue(), tipoBebida.getSelectedItem().toString() + " 500 ml", Integer.toString(total)});
            totalP += total;
            totalApagar.setText(Integer.toString(totalP));
        }
    }//GEN-LAST:event_btn500ActionPerformed

    private void eliminarUltimobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarUltimobtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarUltimobtnActionPerformed

    private void finalizarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finalizarbtnActionPerformed

    private void efectivobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efectivobtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_efectivobtnActionPerformed

    private void sinpebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinpebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sinpebtnActionPerformed

    private void postrebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postrebtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Postre", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_postrebtnActionPerformed

    private void cajetabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajetabtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Cajeta", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_cajetabtnActionPerformed

    private void chiclesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiclesbtnActionPerformed
        int cantidadProducto = (Integer) cantidad.getValue();
        int total = (cantidadProducto * 1000);
        DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
        model.addRow(new Object[]{cantidad.getValue(), "Chicles", Integer.toString(total)});
        totalP += total;
        totalApagar.setText(Integer.toString(totalP));
    }//GEN-LAST:event_chiclesbtnActionPerformed

    private void btn355ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn355ActionPerformed
        boolean bandera = bebidaValida(355,tipoBebida.getSelectedItem().toString());
        if(bandera == false){
            JOptionPane.showMessageDialog(null, "Ese tipo de bebida no tiene ese tamaño", "Error", JOptionPane.OK_OPTION);
        }
        else{
            int cantidadProducto = (Integer) cantidad.getValue();
            int total = (cantidadProducto * 800);
            DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
            model.addRow(new Object[]{cantidad.getValue(), tipoBebida.getSelectedItem().toString() + " 355 ml", Integer.toString(total)});
            totalP += total;
            totalApagar.setText(Integer.toString(totalP));
        }
    }//GEN-LAST:event_btn355ActionPerformed

    private void tipoBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoBebidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoBebidaActionPerformed

    private void btn600ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn600ActionPerformed
        boolean bandera = bebidaValida(600,tipoBebida.getSelectedItem().toString());
        if(bandera == false){
            JOptionPane.showMessageDialog(null, "Ese tipo de bebida no tiene ese tamaño", "Error", JOptionPane.OK_OPTION);
        }
        else{
            int cantidadProducto = (Integer) cantidad.getValue();
            String nombre = tipoBebida.getSelectedItem().toString();
            int precio;
            
            if(nombre.equals("Coca Cola") || nombre.equals("Jet") || nombre.equals("Gatorade azul") || nombre.equals("Gatorade rojo")){
                precio = 1300;
            }
            else{
                precio = 1200;
            }
            
            int total = (cantidadProducto * precio);
            DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
            model.addRow(new Object[]{cantidad.getValue(), tipoBebida.getSelectedItem().toString() + " 600 ml", Integer.toString(total)});
            totalP += total;
            totalApagar.setText(Integer.toString(totalP));
        }
    }//GEN-LAST:event_btn600ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        boolean bandera = bebidaValida(2,tipoBebida.getSelectedItem().toString());
        if(bandera == false){
            JOptionPane.showMessageDialog(null, "Ese tipo de bebida no tiene ese tamaño", "Error", JOptionPane.OK_OPTION);
        }
        else{
            int cantidadProducto = (Integer) cantidad.getValue();
            int total = (cantidadProducto * 2000);
            DefaultTableModel model = (DefaultTableModel) tablaPedido.getModel();
            model.addRow(new Object[]{cantidad.getValue(), tipoBebida.getSelectedItem().toString() + " 2 L", Integer.toString(total)});
            totalP += total;
            totalApagar.setText(Integer.toString(totalP));
        }
    }//GEN-LAST:event_btn2ActionPerformed

    
    // -------------------------- FUNCIONES DE APOYO --------------------------
    public boolean bebidaValida(int tamnho, String nombreBebida){
        if(tamnho == 355){
            switch(nombreBebida){
                case "Agua":
                    return true;
                case "Zarza":
                    return true;
                case "Piña":
                    return true;
                case "Kolita":
                    return true;
                case "Toronja":
                    return true;
                case "7 up":
                    return true;
                case "Pepsi":
                    return true;
                case "Frutas":
                    return true;
                case "Te Melocotón":
                    return true;
                case "Te limón":
                    return true;
                case "Te blanco":
                    return true;
                default:
                    return false;
            }
        }
        else{
            if(tamnho == 500){
                switch(nombreBebida){
                    case "Te melocotón":
                        return true;
                    case "Te blanco":
                        return true;
                    default:
                        return false;
                }
            }
            else{
                if(tamnho == 600){
                    switch(nombreBebida){
                        case "Zarza":
                            return true;
                        case "Kolita":
                            return true;
                        case "Piña":
                            return true;
                        case "Pepsi":
                            return true;
                        case "Ginger Ale":
                            return true;
                        case "Coca Cola":
                            return true;
                        case "Jet":
                            return true;
                        case "Gatorade azul":
                            return true;
                        case "Gatorade rojo":
                            return true;
                        default:
                            return false;
                    }
                }
                // 2L
                else{
                    switch(nombreBebida){
                        case "Pepsi":
                            return true;
                        case "Zarza":
                            return true;
                        case "Piña":
                            return true;
                        case "Kolita":
                            return true;
                        case "Toronja":
                            return true;
                        default:
                            return false;
                    }
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DobleTortabtn;
    private javax.swing.JButton Sencillabtn;
    private javax.swing.JButton TripleTortabtn;
    private javax.swing.JButton arosbtn;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn355;
    private javax.swing.JButton btn500;
    private javax.swing.JButton btn600;
    private javax.swing.JButton cajetabtn;
    private javax.swing.JSpinner cantidad;
    private javax.swing.JButton carneCerdobtn;
    private javax.swing.JButton carneResbtn;
    private javax.swing.JButton chiclesbtn;
    private javax.swing.JButton choriBurgerbtn;
    private javax.swing.JButton choripanbtn;
    private javax.swing.JButton combo1btn;
    private javax.swing.JButton dobleQuesobtn;
    private javax.swing.JButton efectivobtn;
    private javax.swing.JButton eliminarTodosbtn;
    private javax.swing.JButton eliminarUltimobtn;
    private javax.swing.JButton fajitasbtn;
    private javax.swing.JButton finalizarbtn;
    private javax.swing.JButton hotdogbtn;
    private javax.swing.JButton huevobtn;
    private javax.swing.JButton imprimirbtn;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jamonbtn;
    private javax.swing.JButton machaTortabtn;
    private javax.swing.JButton machabtn;
    private javax.swing.JButton machobtn;
    private javax.swing.JButton palillosbtn;
    private javax.swing.JButton papanachosbtn;
    private javax.swing.JButton papasbacon;
    private javax.swing.JButton papasbtn;
    private javax.swing.JButton patatasbtn;
    private javax.swing.JButton pescadobtn;
    private javax.swing.JButton pollobtn;
    private javax.swing.JButton postrebtn;
    private javax.swing.JButton salchiBurgerbtn;
    private javax.swing.JButton salchipapasbtn;
    private javax.swing.JButton sinpebtn;
    private javax.swing.JButton superhotdogbtn;
    private javax.swing.JTable tablaPedido;
    private javax.swing.JButton tacoHarinabtn;
    private javax.swing.JButton tacoMaizbtn;
    private javax.swing.JButton tacoPapasbtn;
    private javax.swing.JButton tarjetabtn;
    private javax.swing.JComboBox<String> tipoBebida;
    private javax.swing.JLabel totalApagar;
    // End of variables declaration//GEN-END:variables
}
